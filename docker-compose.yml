services:
  metasploit:
    image: parrotsec/metasploit:latest
    container_name: metasploit
    stdin_open: true
    tty: true
    volumes:
      - msf-db:/var/lib/postgresql # persisten o banco de dados do Metasploit
    command: tail -f /dev/null  # Isso mantém o container rodando esperando comandos.
    ports:
      - "4444:4444"

  postgres:
    image: postgres
    container_name: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app-network

  nmap:
    image: instrumentisto/nmap:latest
    container_name: nmap
    stdin_open: true
    tty: true
    entrypoint: ["tail", "-f", "/dev/null"]  # Isso mantém o container rodando esperando comandos.
    networks:
      - app-network

  sqlmap:
    image: parrotsec/sqlmap:latest
    container_name: sqlmap
    stdin_open: true
    tty: true
    entrypoint: ["tail", "-f", "/dev/null"]  # Isso mantém o container rodando esperando comandos.
    networks:
      - app-network

  dalfox:
    image: hahwul/dalfox:latest
    container_name: dalfox
    stdin_open: true
    tty: true
    entrypoint: ["tail", "-f", "/dev/null"]  # Isso mantém o container rodando esperando comandos.
    networks:
      - app-network
  
  mitmproxy:
    image: mitmproxy/mitmproxy:latest
    container_name: mitmproxy
    stdin_open: true
    tty: true
    command: mitmproxy
    ports:
      - "8080:8080"  # Porta HTTP proxy
      - "8081:8081"  # Porta Web interface (se você quiser usar a interface web)
    volumes:
      - ~/.mitmproxy:/home/mitmproxy/.mitmproxy  # Volumes para persistir certificados e configurações
    networks:
      - app-network
    restart: unless-stopped  # Opcional: Manter o container reiniciando em caso de falha, mas sem iniciar automaticamente

  wappalyzer:
    image: ruanzx/wappalyzer
    container_name: wappalyzer
    command: /bin/bash -c "while true; do sleep 3600; done"  # Mantém o container rodando indefinidamente
    volumes:
      - ./output:/app/output  # Opcional, caso queira salvar os resultados em um diretório local
    restart: always

networks:
  app-network:
    driver: bridge

volumes:
  msf-db:
